!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
Drupal.behaviors.sina_open	sina_open.js	/^Drupal.behaviors.sina_open = function (context) {$/;"	f
Drupal.behaviors.sina_open.c	sina_open.js	/^	function c() {$/;"	f
MPboundary	weibooauth.php	/^		$MPboundary = '--'.$boundary;$/;"	v
OAuthConsumer	weibooauth.php	/^class OAuthConsumer { $/;"	c
OAuthDataStore	weibooauth.php	/^class OAuthDataStore { $/;"	c
OAuthException	weibooauth.php	/^class OAuthException extends Exception { $/;"	c
OAuthRequest	weibooauth.php	/^class OAuthRequest { $/;"	c
OAuthServer	weibooauth.php	/^class OAuthServer { $/;"	c
OAuthSignatureMethod	weibooauth.php	/^class OAuthSignatureMethod { $/;"	c
OAuthSignatureMethod_HMAC_SHA1	weibooauth.php	/^class OAuthSignatureMethod_HMAC_SHA1 extends OAuthSignatureMethod { $/;"	c
OAuthSignatureMethod_PLAINTEXT	weibooauth.php	/^class OAuthSignatureMethod_PLAINTEXT extends OAuthSignatureMethod { $/;"	c
OAuthSignatureMethod_RSA_SHA1	weibooauth.php	/^class OAuthSignatureMethod_RSA_SHA1 extends OAuthSignatureMethod { $/;"	c
OAuthToken	weibooauth.php	/^class OAuthToken { $/;"	c
OAuthUtil	weibooauth.php	/^class OAuthUtil { $/;"	c
POST_INPUT	weibooauth.php	/^    public static $POST_INPUT = 'php:\/\/input'; $/;"	v
WB_AKEY	config.php	/^define( "WB_AKEY" , '2784147378' );$/;"	d
WB_SKEY	config.php	/^define( "WB_SKEY" , 'dd97f116fc7a97b1e48acfd9431f90aa' );$/;"	d
WeiboClient	weibooauth.php	/^class WeiboClient $/;"	c
WeiboOAuth	weibooauth.php	/^class WeiboOAuth { $/;"	c
__construct	weibooauth.php	/^    function __construct( $akey , $skey , $accecss_token , $accecss_token_secret ) $/;"	f
__construct	weibooauth.php	/^    function __construct($consumer_key, $consumer_secret, $oauth_token = NULL, $oauth_token_secret = NULL) { $/;"	f
__construct	weibooauth.php	/^    function __construct($data_store) { $/;"	f
__construct	weibooauth.php	/^    function __construct($http_method, $http_url, $parameters=NULL) { $/;"	f
__construct	weibooauth.php	/^    function __construct($key, $secret) { $/;"	f
__toString	weibooauth.php	/^    function __toString() { $/;"	f
__toString	weibooauth.php	/^    public function __toString() { $/;"	f
accessTokenURL	weibooauth.php	/^    function accessTokenURL()  { return 'http:\/\/api.t.sina.com.cn\/oauth\/access_token'; } $/;"	f
add_signature_method	weibooauth.php	/^    public function add_signature_method($signature_method) { $/;"	f
add_to_favorites	weibooauth.php	/^    function add_to_favorites( $sid ) $/;"	f
authenticateURL	weibooauth.php	/^    function authenticateURL() { return 'http:\/\/api.t.sina.com.cn\/oauth\/authenticate'; } $/;"	f
authorizeURL	weibooauth.php	/^    function authorizeURL()    { return 'http:\/\/api.t.sina.com.cn\/oauth\/authorize'; } $/;"	f
base_string	weibooauth.php	/^        $base_string = $request->get_signature_base_string(); $/;"	v
base_string	weibooauth.php	/^    public $base_string; $/;"	v
boundary	weibooauth.php	/^	public static $boundary = '';$/;"	v
build_http_query	weibooauth.php	/^    public static function build_http_query($params) { $/;"	f
build_http_query_multi	weibooauth.php	/^    public static function build_http_query_multi($params) { $/;"	f
build_signature	weibooauth.php	/^    public function build_signature($request, $consumer, $token) { $/;"	f
build_signature	weibooauth.php	/^    public function build_signature($signature_method, $consumer, $token) { $/;"	f
build_signature	weibooauth.php	/^    public function build_signature(&$request, $consumer, $token) { $/;"	f
built	weibooauth.php	/^        $built = $this->build_signature($request, $consumer, $token); $/;"	v
cert	weibooauth.php	/^        $cert = $this->fetch_private_cert($request); $/;"	v
cert	weibooauth.php	/^        $cert = $this->fetch_public_cert($request); $/;"	v
check_nonce	weibooauth.php	/^    private function check_nonce($consumer, $token, $nonce, $timestamp) { $/;"	f
check_signature	weibooauth.php	/^    private function check_signature(&$request, $consumer, $token) { $/;"	f
check_signature	weibooauth.php	/^    public function check_signature(&$request, $consumer, $token, $signature) { $/;"	f
check_timestamp	weibooauth.php	/^    private function check_timestamp($timestamp) { $/;"	f
ci	weibooauth.php	/^        $ci = curl_init(); $/;"	v
comments_by_me	weibooauth.php	/^    function comments_by_me( $page = 1 , $count = 20 ) $/;"	f
comments_timeline	weibooauth.php	/^    function comments_timeline( $page = 1 , $count = 20 ) $/;"	f
connecttimeout	weibooauth.php	/^    public $connecttimeout = 30;  $/;"	v
consumer	weibooauth.php	/^        $consumer = $this->data_store->lookup_consumer($consumer_key); $/;"	v
consumer	weibooauth.php	/^        $consumer = $this->get_consumer($request); $/;"	v
consumer	weibooauth.php	/^        $this->consumer = new OAuthConsumer($consumer_key, $consumer_secret); $/;"	v
consumer_key	weibooauth.php	/^        $consumer_key = @$request->get_parameter("oauth_consumer_key"); $/;"	v
content	weibooauth.php	/^        	$content = file_get_contents( $url );$/;"	v
content	weibooauth.php	/^        $content="FetchUrl"; $/;"	v
data_store	weibooauth.php	/^        $this->data_store = $data_store; $/;"	v
data_store	weibooauth.php	/^    protected $data_store; $/;"	v
decode_json	weibooauth.php	/^    public $decode_json = TRUE; $/;"	v
decoded_sig	weibooauth.php	/^        $decoded_sig = base64_decode($signature); $/;"	v
defaults	weibooauth.php	/^        $defaults = array("source" => $consumer->key,$/;"	v
delete	weibooauth.php	/^    function delete( $sid ) $/;"	f
delete	weibooauth.php	/^    function delete($url, $parameters = array()) { $/;"	f
delete_dm	weibooauth.php	/^    function delete_dm( $did ) $/;"	f
destroy	weibooauth.php	/^    function destroy( $sid ) $/;"	f
endMPboundary	weibooauth.php	/^		$endMPboundary = $MPboundary. '--';$/;"	v
ext	weibooauth.php	/^    	$ext = strtolower(pathinfo( $file , PATHINFO_EXTENSION ));$/;"	v
fetch_access_token	weibooauth.php	/^    public function fetch_access_token(&$request) { $/;"	f
fetch_private_cert	weibooauth.php	/^    protected function fetch_private_cert(&$request) { $/;"	f
fetch_public_cert	weibooauth.php	/^    protected function fetch_public_cert(&$request) { $/;"	f
fetch_request_token	weibooauth.php	/^    public function fetch_request_token(&$request) { $/;"	f
filename	weibooauth.php	/^        	$filename = reset( explode( '?' , basename( $url ) ));$/;"	v
follow	weibooauth.php	/^    function follow( $uid_or_name ) $/;"	f
followers	weibooauth.php	/^    function followers( $cursor = false , $count = false , $uid_or_name = null ) $/;"	f
format	weibooauth.php	/^    public $format = 'json'; $/;"	v
found	weibooauth.php	/^        $found = $this->data_store->lookup_nonce( $/;"	v
friends	weibooauth.php	/^    function friends( $cursor = false , $count = false , $uid_or_name = null ) $/;"	f
friends_timeline	weibooauth.php	/^    function friends_timeline() $/;"	f
from_consumer_and_token	weibooauth.php	/^    public static function from_consumer_and_token($consumer, $token, $http_method, $http_url, $parameters=NULL) { $/;"	f
from_request	weibooauth.php	/^    public static function from_request($http_method=NULL, $http_url=NULL, $parameters=NULL) { $/;"	f
generate_nonce	weibooauth.php	/^    private static function generate_nonce() { $/;"	f
generate_timestamp	weibooauth.php	/^    private static function generate_timestamp() { $/;"	f
get	weibooauth.php	/^    function get($url, $parameters = array()) { $/;"	f
getAccessToken	weibooauth.php	/^    function getAccessToken($oauth_verifier = FALSE, $oauth_token = false) { $/;"	f
getAuthorizeURL	weibooauth.php	/^    function getAuthorizeURL($token, $sign_in_with_Weibo = TRUE , $url) { $/;"	f
getHeader	weibooauth.php	/^    function getHeader($ch, $header) { $/;"	f
getRequestToken	weibooauth.php	/^    function getRequestToken($oauth_callback = NULL) { $/;"	f
get_comments_by_sid	weibooauth.php	/^    function get_comments_by_sid( $sid , $page = 1 , $count = 20 ) $/;"	f
get_consumer	weibooauth.php	/^    private function get_consumer(&$request) { $/;"	f
get_count_info_by_ids	weibooauth.php	/^    function get_count_info_by_ids( $sids ) $/;"	f
get_favorites	weibooauth.php	/^    function get_favorites( $page = false ) $/;"	f
get_headers	weibooauth.php	/^    public static function get_headers() { $/;"	f
get_image_mime	weibooauth.php	/^    public static function get_image_mime( $file )$/;"	f
get_name	weibooauth.php	/^    function get_name() { $/;"	f
get_name	weibooauth.php	/^    public function get_name() { $/;"	f
get_normalized_http_method	weibooauth.php	/^    public function get_normalized_http_method() { $/;"	f
get_normalized_http_url	weibooauth.php	/^    public function get_normalized_http_url() { $/;"	f
get_parameter	weibooauth.php	/^    public function get_parameter($name) { $/;"	f
get_parameters	weibooauth.php	/^    public function get_parameters() { $/;"	f
get_signable_parameters	weibooauth.php	/^    public function get_signable_parameters() { $/;"	f
get_signature_base_string	weibooauth.php	/^    public function get_signature_base_string() { $/;"	f
get_signature_method	weibooauth.php	/^    private function get_signature_method(&$request) { $/;"	f
get_token	weibooauth.php	/^    private function get_token(&$request, $consumer, $token_type="access") { $/;"	f
get_version	weibooauth.php	/^    private function get_version(&$request) { $/;"	f
header_array	weibooauth.php	/^        $header_array = array(); $/;"	v
header_array2	weibooauth.php	/^        	$header_array2 = array("Content-Type: multipart\/form-data; boundary=" . OAuthUtil::$boundary , "Expect: ");$/;"	v
header_array2	weibooauth.php	/^        $header_array2=array(); $/;"	v
header_content	weibooauth.php	/^            $header_content = (isset($matches[5])) ? $matches[5][0] : $matches[4][0]; $/;"	v
header_name	weibooauth.php	/^            $header_name = $matches[2][0]; $/;"	v
header_parameters	weibooauth.php	/^                $header_parameters = OAuthUtil::split_header( $/;"	v
home_timeline	weibooauth.php	/^    function home_timeline() $/;"	f
host	weibooauth.php	/^                $host = "$host:$port"; $/;"	v
host	weibooauth.php	/^        $host = $parts['host']; $/;"	v
host	weibooauth.php	/^    public $host = "http:\/\/api.t.sina.com.cn\/"; $/;"	v
http	weibooauth.php	/^    function http($url, $method, $postfields = NULL , $multi = false) { $/;"	f
http_code	weibooauth.php	/^        $this->http_code = curl_getinfo($ci, CURLINFO_HTTP_CODE); $/;"	v
http_code	weibooauth.php	/^    public $http_code; $/;"	v
http_info	weibooauth.php	/^        $this->http_info = array(); $/;"	v
http_info	weibooauth.php	/^        $this->http_info = array_merge($this->http_info, curl_getinfo($ci)); $/;"	v
http_info	weibooauth.php	/^    public $http_info; $/;"	v
http_method	weibooauth.php	/^        $this->http_method = $http_method; $/;"	v
http_method	weibooauth.php	/^    private $http_method; $/;"	v
http_url	weibooauth.php	/^        $this->http_url = $http_url; $/;"	v
http_url	weibooauth.php	/^    private $http_url; $/;"	v
i	weibooauth.php	/^        $i = strpos($header, ':'); $/;"	v
is_followed	weibooauth.php	/^    function is_followed( $uid_or_name ) $/;"	f
key	weibooauth.php	/^		$key = implode('&', $key_parts); $/;"	v
key	weibooauth.php	/^                $key = str_replace( $/;"	v
key	weibooauth.php	/^            $key = str_replace('-', '_', strtolower(substr($header, 0, $i))); $/;"	v
key	weibooauth.php	/^        $this->key = $key; $/;"	v
key	weibooauth.php	/^    public $key; $/;"	v
key_parts	weibooauth.php	/^		$key_parts = OAuthUtil::urlencode_rfc3986($key_parts); $/;"	v
key_parts	weibooauth.php	/^        $key_parts = array( $/;"	v
keys	weibooauth.php	/^        $keys = OAuthUtil::urlencode_rfc3986(array_keys($params)); $/;"	v
keys	weibooauth.php	/^        $keys = array_keys($params);$/;"	v
lastAPICall	weibooauth.php	/^    function lastAPICall() { return $this->last_api_call; } $/;"	f
lastStatusCode	weibooauth.php	/^    function lastStatusCode() { return $this->http_status; } $/;"	f
list_dm	weibooauth.php	/^    function list_dm( $page = 1 , $count = 20  ) $/;"	f
list_dm_sent	weibooauth.php	/^    function list_dm_sent( $page = 1 , $count = 20 ) $/;"	f
lookup_consumer	weibooauth.php	/^    function lookup_consumer($consumer_key) { $/;"	f
lookup_nonce	weibooauth.php	/^    function lookup_nonce($consumer, $token, $nonce, $timestamp) { $/;"	f
lookup_token	weibooauth.php	/^    function lookup_token($consumer, $token_type, $token) { $/;"	f
match	weibooauth.php	/^            $match = $matches[0]; $/;"	v
mentions	weibooauth.php	/^    function mentions( $page = 1 , $count = 20 ) $/;"	f
mime	weibooauth.php	/^    			$mime = 'image\/gif';$/;"	v
mime	weibooauth.php	/^    			$mime = 'image\/jpg';$/;"	v
mime	weibooauth.php	/^    			$mime = 'image\/png';$/;"	v
mime	weibooauth.php	/^        	$mime = self::get_image_mime($url); $/;"	v
mt	weibooauth.php	/^		$mt = microtime(); $/;"	v
multipartbody	weibooauth.php	/^		$multipartbody = '';$/;"	v
new_access_token	weibooauth.php	/^    function new_access_token($token, $consumer) { $/;"	f
new_request_token	weibooauth.php	/^    function new_request_token($consumer) { $/;"	f
new_token	weibooauth.php	/^        $new_token = $this->data_store->new_access_token($token, $consumer); $/;"	v
new_token	weibooauth.php	/^        $new_token = $this->data_store->new_request_token($consumer); $/;"	v
nonce	weibooauth.php	/^        $nonce = @$request->get_parameter('oauth_nonce'); $/;"	v
now	weibooauth.php	/^        $now = time(); $/;"	v
oAuthRequest	weibooauth.php	/^    function oAuthRequest($url, $method, $parameters , $multi = false) { $/;"	f
oauth	weibooauth.php	/^        $this->oauth = new WeiboOAuth( $akey , $skey , $accecss_token , $accecss_token_secret ); $/;"	v
offset	weibooauth.php	/^            $offset = $match[1] + strlen($match[0]); $/;"	v
offset	weibooauth.php	/^        $offset = 0; $/;"	v
ok	weibooauth.php	/^        $ok = openssl_sign($base_string, $signature, $privatekeyid); $/;"	v
ok	weibooauth.php	/^        $ok = openssl_verify($base_string, $decoded_sig, $publickeyid); $/;"	v
out	weibooauth.php	/^        $out = $this->get_normalized_http_url(); $/;"	v
out	weibooauth.php	/^        $out = array(); $/;"	v
out	weibooauth.php	/^        $out ='Authorization: OAuth realm=""'; $/;"	v
pairs	weibooauth.php	/^        $pairs = array(); $/;"	v
pairs	weibooauth.php	/^        $pairs = explode('&', $input); $/;"	v
param	weibooauth.php	/^		$param = array();$/;"	v
param	weibooauth.php	/^        $param = array(); $/;"	v
parameter	weibooauth.php	/^            $parameter = OAuthUtil::urldecode_rfc3986($split[0]); $/;"	v
parameters	weibooauth.php	/^                $parameters = array_merge($parameters, $header_parameters); $/;"	v
parameters	weibooauth.php	/^                $parameters = array_merge($parameters, $post_data); $/;"	v
parameters	weibooauth.php	/^            $parameters = OAuthUtil::parse_parameters($_SERVER['QUERY_STRING']); $/;"	v
parameters	weibooauth.php	/^        $parameters = array(); $/;"	v
parameters	weibooauth.php	/^        $parameters = array_merge($defaults, $parameters); $/;"	v
parameters	weibooauth.php	/^        $this->parameters = $parameters; $/;"	v
parameters	weibooauth.php	/^    private $parameters; $/;"	v
params	weibooauth.php	/^        $params = $this->parameters; $/;"	v
params	weibooauth.php	/^        $params = array(); $/;"	v
params	weibooauth.php	/^        $params = array_combine($keys, $values); $/;"	v
parse_parameters	weibooauth.php	/^    public static function parse_parameters( $input ) { $/;"	f
parsed_parameters	weibooauth.php	/^        $parsed_parameters = array(); $/;"	v
parts	weibooauth.php	/^        $parts = OAuthUtil::urlencode_rfc3986($parts); $/;"	v
parts	weibooauth.php	/^        $parts = array( $/;"	v
parts	weibooauth.php	/^        $parts = parse_url($this->http_url); $/;"	v
path	weibooauth.php	/^        $path = @$parts['path']; $/;"	v
pattern	weibooauth.php	/^        $pattern = '\/(([-_a-z]*)=("([^"]*)"|([^,]*)),?)\/'; $/;"	v
port	weibooauth.php	/^        $port = @$parts['port']; $/;"	v
post	weibooauth.php	/^    function post($url, $parameters = array() , $multi = false) { $/;"	f
post_data	weibooauth.php	/^                $post_data = OAuthUtil::parse_parameters( $/;"	v
post_data	weibooauth.php	/^        $post_data = $this->to_postdata(); $/;"	v
privatekeyid	weibooauth.php	/^        $privatekeyid = openssl_get_privatekey($cert); $/;"	v
public_timeline	weibooauth.php	/^    function public_timeline() $/;"	f
publickeyid	weibooauth.php	/^        $publickeyid = openssl_get_publickey($cert); $/;"	v
rand	weibooauth.php	/^        $rand = mt_rand(); $/;"	v
raw	weibooauth.php	/^        $raw = implode("&", $sig); $/;"	v
remove_from_favorites	weibooauth.php	/^    function remove_from_favorites( $sid ) $/;"	f
reply	weibooauth.php	/^    function reply( $sid , $text , $cid ) $/;"	f
repost	weibooauth.php	/^    function repost( $sid , $text = false ) $/;"	f
request	weibooauth.php	/^        $request = $this->oAuthRequest($this->accessTokenURL(), 'GET', $parameters); $/;"	v
request	weibooauth.php	/^        $request = $this->oAuthRequest($this->requestTokenURL(), 'GET', $parameters); $/;"	v
request	weibooauth.php	/^        $request = OAuthRequest::from_consumer_and_token($this->consumer, $this->token, $method, $url, $parameters); $/;"	v
requestTokenURL	weibooauth.php	/^    function requestTokenURL() { return 'http:\/\/api.t.sina.com.cn\/oauth\/request_token'; } $/;"	f
request_headers	weibooauth.php	/^            $request_headers = OAuthUtil::get_headers(); $/;"	v
request_with_pager	weibooauth.php	/^    protected function request_with_pager( $url , $page = false , $count = false ) $/;"	f
request_with_uid	weibooauth.php	/^    protected function request_with_uid( $url , $uid_or_name , $page = false , $count = false , $cursor = false , $post = false ) $/;"	f
response	weibooauth.php	/^        $response = $this->oAuthRequest($url, 'DELETE', $parameters); $/;"	v
response	weibooauth.php	/^        $response = $this->oAuthRequest($url, 'GET', $parameters); $/;"	v
response	weibooauth.php	/^        $response = $this->oAuthRequest($url, 'POST', $parameters , $multi ); $/;"	v
response	weibooauth.php	/^        $response = curl_exec($ci); $/;"	v
scheme	weibooauth.php	/^        $scheme = $parts['scheme']; $/;"	v
scheme	weibooauth.php	/^        $scheme = (!isset($_SERVER['HTTPS']) || $_SERVER['HTTPS'] != "on") $/;"	v
secret	weibooauth.php	/^        $this->secret = $secret; $/;"	v
secret	weibooauth.php	/^    public $secret; $/;"	v
send_comment	weibooauth.php	/^    function send_comment( $sid , $text , $cid = false ) $/;"	f
send_dm	weibooauth.php	/^    function send_dm( $uid_or_name , $text ) $/;"	f
set_parameter	weibooauth.php	/^    public function set_parameter($name, $value, $allow_duplicates = true) { $/;"	f
sha1_method	weibooauth.php	/^        $this->sha1_method = new OAuthSignatureMethod_HMAC_SHA1(); $/;"	v
show_status	weibooauth.php	/^    function show_status( $sid ) $/;"	f
show_user	weibooauth.php	/^    function show_user( $uid_or_name = null ) $/;"	f
sig	weibooauth.php	/^        $sig = array( $/;"	v
sign_request	weibooauth.php	/^    public function sign_request($signature_method, $consumer, $token) { $/;"	f
signature	weibooauth.php	/^		$signature = $this->build_signature($signature_method, $consumer, $token); $/;"	v
signature	weibooauth.php	/^        $signature = $request->get_parameter('oauth_signature'); $/;"	v
signature	weibooauth.php	/^        $signature = $signature_method->build_signature($this, $consumer, $token); $/;"	v
signature_method	weibooauth.php	/^            $signature_method = "PLAINTEXT"; $/;"	v
signature_method	weibooauth.php	/^        $signature_method = $/;"	v
signature_method	weibooauth.php	/^        $signature_method = $this->get_signature_method($request); $/;"	v
signature_methods	weibooauth.php	/^    protected $signature_methods = array(); $/;"	v
split	weibooauth.php	/^            $split = explode('=', $pair, 2); $/;"	v
split_header	weibooauth.php	/^    public static function split_header($header, $only_allow_oauth_parameters = true) { $/;"	f
ssl_verifypeer	weibooauth.php	/^    public $ssl_verifypeer = FALSE; $/;"	v
timeout	weibooauth.php	/^    public $timeout = 30; $/;"	v
timestamp	weibooauth.php	/^        $timestamp = @$request->get_parameter('oauth_timestamp'); $/;"	v
timestamp_threshold	weibooauth.php	/^    protected $timestamp_threshold = 300; \/\/ in seconds, five minutes $/;"	v
to_header	weibooauth.php	/^    public function to_header() { $/;"	f
to_postdata	weibooauth.php	/^    public function to_postdata( $multi = false ) {$/;"	f
to_string	weibooauth.php	/^    function to_string() { $/;"	f
to_url	weibooauth.php	/^    public function to_url() { $/;"	f
token	weibooauth.php	/^            $this->token = NULL; $/;"	v
token	weibooauth.php	/^            $this->token = new OAuthConsumer($oauth_token, $oauth_token_secret); $/;"	v
token	weibooauth.php	/^            $token = $token['oauth_token']; $/;"	v
token	weibooauth.php	/^        $this->token = new OAuthConsumer($token['oauth_token'], $token['oauth_token_secret']); $/;"	v
token	weibooauth.php	/^        $token = $this->data_store->lookup_token( $/;"	v
token	weibooauth.php	/^        $token = $this->get_token($request, $consumer, "access"); $/;"	v
token	weibooauth.php	/^        $token = $this->get_token($request, $consumer, "request"); $/;"	v
token	weibooauth.php	/^        $token = NULL; $/;"	v
token	weibooauth.php	/^        $token = OAuthUtil::parse_parameters($request); $/;"	v
token_field	weibooauth.php	/^        $token_field = @$request->get_parameter('oauth_token'); $/;"	v
total	weibooauth.php	/^        $total = array(); $/;"	v
unfollow	weibooauth.php	/^    function unfollow( $uid_or_name ) $/;"	f
unset_parameter	weibooauth.php	/^    public function unset_parameter($name) { $/;"	f
update	weibooauth.php	/^    function update( $text ) $/;"	f
update_avatar	weibooauth.php	/^    function update_avatar( $pic_path )$/;"	f
upload	weibooauth.php	/^    function upload( $text , $pic_path ) $/;"	f
url	weibooauth.php	/^        	$url = ltrim( $value , '@' );$/;"	v
url	weibooauth.php	/^                $url = "{$url}?{$postfields}"; $/;"	v
url	weibooauth.php	/^            $url = "{$this->host}{$url}.{$this->format}"; $/;"	v
url	weibooauth.php	/^        $this->url = $url; $/;"	v
url	weibooauth.php	/^    public $url; $/;"	v
urldecode_rfc3986	weibooauth.php	/^    public static function urldecode_rfc3986($string) { $/;"	f
urlencode_rfc3986	weibooauth.php	/^    public static function urlencode_rfc3986($input) { $/;"	f
user_timeline	weibooauth.php	/^    function user_timeline( $page = 1 , $count = 20 , $uid_or_name = null ) $/;"	f
useragent	weibooauth.php	/^    public $useragent = 'Sae T OAuth v0.2.0-beta2'; $/;"	v
valid_sig	weibooauth.php	/^        $valid_sig = $signature_method->check_signature( $/;"	v
value	weibooauth.php	/^            $value = isset($split[1]) ? OAuthUtil::urldecode_rfc3986($split[1]) : ''; $/;"	v
value	weibooauth.php	/^            $value = trim(substr($header, $i + 2)); $/;"	v
values	weibooauth.php	/^        $values = OAuthUtil::urlencode_rfc3986(array_values($params)); $/;"	v
values	weibooauth.php	/^        $values = array_values($params);$/;"	v
verify_credentials	weibooauth.php	/^    function verify_credentials() $/;"	f
verify_request	weibooauth.php	/^    public function verify_request(&$request) { $/;"	f
version	weibooauth.php	/^            $version = 1.0; $/;"	v
version	weibooauth.php	/^        $version = $request->get_parameter("oauth_version"); $/;"	v
version	weibooauth.php	/^    protected $version = 1.0;             \/\/ hi blaine $/;"	v
version	weibooauth.php	/^    public static $version = '1.0a'; $/;"	v
